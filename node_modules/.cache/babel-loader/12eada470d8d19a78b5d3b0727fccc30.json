{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zach/Desktop/projects/steam-common-games/src/components/FriendsContainer.js\";\nimport React from \"react\";\nimport Friend from \"../components/Friend\";\nimport { connect } from 'react-redux';\nimport fetchFriends from '../actions/fetchFriends';\nimport friendReducer from \"../reducers/friendsReducer\";\n\nclass FriendsContainer extends React.Component {\n  componentDidMount() {\n    this.props.fetchFriends(); // const friends = {friends: [{steamid: 1}, {steamid: 2}]}\n    // //  this.props.fetchFriends(friends)\n    // console.log(this.props.fetchFriends(friends));\n    // fetch(\"http://localhost:3000/friends/\", {\n    //   crossDomain: true, \n    //   method: 'GET',\n    //   headers: {'Content-Type': 'application/json'},\n    // })\n    // .then(res => res.json())\n    // .then(data => {\n    //   this.setState({data: data})\n    // })\n  }\n\n  render() {\n    const friends = this.props.friends.friends;\n    console.log(this.props.friends);\n\n    if (friends === undefined) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"undefined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friends-container\",\n        children: friends.map(friend => {\n          return /*#__PURE__*/_jsxDEV(Friend, {\n            friend: friend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = friends => {\n  return {\n    friends\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFriends\n})(FriendsContainer);","map":{"version":3,"sources":["/home/zach/Desktop/projects/steam-common-games/src/components/FriendsContainer.js"],"names":["React","Friend","connect","fetchFriends","friendReducer","FriendsContainer","Component","componentDidMount","props","render","friends","console","log","undefined","map","friend","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,gBAAN,SAA+BL,KAAK,CAACM,SAArC,CAA+C;AAI7CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,YAAX,GADkB,CAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AACDM,EAAAA,MAAM,GAAG;AAEP,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,CAAmBA,OAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWE,OAAvB;;AACA,QAAIA,OAAO,KAAKG,SAAhB,EAA2B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACKH,OAAO,CAACI,GAAR,CAAYC,MAAM,IAAI;AACrB,8BAAO,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AACF;;AAlC4C;;AAqC/C,MAAMC,eAAe,GAAGN,OAAO,IAAI;AACjC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAUA,eAAeR,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAyCE,gBAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport Friend from \"../components/Friend\";\nimport { connect } from 'react-redux';\nimport fetchFriends from '../actions/fetchFriends';\nimport friendReducer from \"../reducers/friendsReducer\";\n\nclass FriendsContainer extends React.Component {\n\n\n\n  componentDidMount() {\n    this.props.fetchFriends()\n  // const friends = {friends: [{steamid: 1}, {steamid: 2}]}\n  // //  this.props.fetchFriends(friends)\n  // console.log(this.props.fetchFriends(friends));\n  // fetch(\"http://localhost:3000/friends/\", {\n  //   crossDomain: true, \n  //   method: 'GET',\n  //   headers: {'Content-Type': 'application/json'},\n  // })\n  // .then(res => res.json())\n  // .then(data => {\n  //   this.setState({data: data})\n  // })\n  }\n  render() {\n    \n    const friends = this.props.friends.friends\n    console.log(this.props.friends);\n    if (friends === undefined) {\n      return(<p>undefined</p>)\n    } else {\n      return (\n        <div className=\"friends-container\">\n            {friends.map(friend => {\n              return <Friend friend={friend}/>\n            })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = friends => {\n  return {\n    friends\n  }\n}\n\n\n\n\n\nexport default connect(mapStateToProps, {fetchFriends})(FriendsContainer);"]},"metadata":{},"sourceType":"module"}