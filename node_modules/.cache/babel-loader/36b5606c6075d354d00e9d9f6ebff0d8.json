{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zach/Desktop/projects/we-play-games/src/components/FriendsContainer.js\";\nimport React from \"react\";\nimport FriendList from \"./FriendList\";\nimport steamApiKey from '../keys/keys';\nimport { connect } from 'react-redux';\n\nclass FriendsContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const friends = {\n      friends: [{\n        steamid: 1\n      }, {\n        steamid: 2\n      }]\n    };\n    this.props.fetchFriends(friends);\n  } // fetch(`/ISteamUser/GetFriendList/v0001/?key=${steamApiKey}&steamid=76561198036778665&relationship=friend`, {\n  //   crossDomain: true, \n  //   method: 'GET',\n  //   headers: {'Content-Type': 'application/json'},\n  // })\n  // .then(res => res.json())\n  // .then(resJson => {\n  //   this.setState({data: resJson.friendslist.friends});\n  // })\n\n\n  render() {\n    console.log(this.props.friends);\n    debugger;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friends-container\",\n      children: /*#__PURE__*/_jsxDEV(FriendList, {\n        friends: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    friends: state.friends\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchFriends: friends => dispatch({\n      type: 'FETCH_FRIENDS',\n      payload: friends\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsContainer);","map":{"version":3,"sources":["/home/zach/Desktop/projects/we-play-games/src/components/FriendsContainer.js"],"names":["React","FriendList","steamApiKey","connect","FriendsContainer","Component","constructor","state","data","componentDidMount","friends","steamid","props","fetchFriends","render","console","log","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAE7CC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAGDC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,OAAO,GAAG;AAACA,MAAAA,OAAO,EAAE,CAAC;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAD,EAAe;AAACA,QAAAA,OAAO,EAAE;AAAV,OAAf;AAAV,KAAhB;AACA,SAAKC,KAAL,CAAWC,YAAX,CAAwBH,OAAxB;AACA,GAb4C,CAgB9C;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGFI,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWF,OAAvB;AACA;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApC4C;;AAwC/C,MAAMS,eAAe,GAAGV,KAAK,IAAI;AAC/B,SAAO;AACLG,IAAAA,OAAO,EAAEH,KAAK,CAACG;AADV,GAAP;AAID,CALD;;AAOA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLN,IAAAA,YAAY,EAAGH,OAAD,IAAaS,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,eAAP;AAAwBC,MAAAA,OAAO,EAAEX;AAAjC,KAAD;AAD9B,GAAP;AAGD,CAJD;;AAQA,eAAeP,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,gBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport FriendList from \"./FriendList\";\nimport steamApiKey from '../keys/keys'\nimport { connect } from 'react-redux';\n\nclass FriendsContainer extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      data: []\n    }\n  }\n\n\n  componentDidMount() {\n   const friends = {friends: [{steamid: 1}, {steamid: 2}]}\n   this.props.fetchFriends(friends)\n  }\n\n\n // fetch(`/ISteamUser/GetFriendList/v0001/?key=${steamApiKey}&steamid=76561198036778665&relationship=friend`, {\n    //   crossDomain: true, \n    //   method: 'GET',\n    //   headers: {'Content-Type': 'application/json'},\n    // })\n    // .then(res => res.json())\n    // .then(resJson => {\n    //   this.setState({data: resJson.friendslist.friends});\n    // })\n\n\n  render() {\n    console.log(this.props.friends);\n    debugger\n    return (\n      <div className=\"friends-container\">\n        <FriendList friends={this.state.data}/>\n        \n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    friends: state.friends\n    \n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchFriends: (friends) => dispatch({type: 'FETCH_FRIENDS', payload: friends})\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsContainer);"]},"metadata":{},"sourceType":"module"}