{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zach/Desktop/projects/steam-common-games/src/components/FriendsContainer.js\";\nimport React from \"react\";\nimport Friend from \"../components/Friend\";\nimport { connect } from 'react-redux';\nimport fetchFriends from '../actions/fetchFriends';\n\nclass FriendsContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchFriends(); // const friends = {friends: [{steamid: 1}, {steamid: 2}]}\n    // //  this.props.fetchFriends(friends)\n    // console.log(this.props.fetchFriends(friends));\n    // fetch(\"http://localhost:3000/friends/\", {\n    //   crossDomain: true, \n    //   method: 'GET',\n    //   headers: {'Content-Type': 'application/json'},\n    // })\n    // .then(res => res.json())\n    // .then(data => {\n    //   this.setState({data: data})\n    // })\n  }\n\n  render() {\n    // debugger\n    const friends = this.props.friends;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friends-container\",\n      children: friends.map(friend => {\n        return /*#__PURE__*/_jsxDEV(Friend, {\n          friend: friend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = friends => {\n  return {\n    friends\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchFriends: (friends) => dispatch({type: 'FETCH_FRIENDS', payload: friends})\n//   }\n// }\n\n\nexport default connect(mapStateToProps, {\n  fetchFriends\n})(FriendsContainer);","map":{"version":3,"sources":["/home/zach/Desktop/projects/steam-common-games/src/components/FriendsContainer.js"],"names":["React","Friend","connect","fetchFriends","FriendsContainer","Component","constructor","state","data","componentDidMount","props","render","friends","map","friend","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAE7CC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWP,YAAX,GADkB,CAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AAMDQ,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACKA,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAI;AACrB,4BAAO,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAxC4C;;AA4C/C,MAAMC,eAAe,GAAGH,OAAO,IAAI;AACjC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD,C,CAMA;AACA;AACA;AACA;AACA;;;AAIA,eAAeV,OAAO,CAACa,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,gBAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport Friend from \"../components/Friend\";\nimport { connect } from 'react-redux';\nimport fetchFriends from '../actions/fetchFriends';\n\nclass FriendsContainer extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      data: []\n    }\n  }\n\n\n  componentDidMount() {\n    this.props.fetchFriends()\n  // const friends = {friends: [{steamid: 1}, {steamid: 2}]}\n  // //  this.props.fetchFriends(friends)\n  // console.log(this.props.fetchFriends(friends));\n  // fetch(\"http://localhost:3000/friends/\", {\n  //   crossDomain: true, \n  //   method: 'GET',\n  //   headers: {'Content-Type': 'application/json'},\n  // })\n  // .then(res => res.json())\n  // .then(data => {\n  //   this.setState({data: data})\n  // })\n  }\n\n\n \n\n\n  render() {\n    // debugger\n    const friends = this.props.friends\n    return (\n      <div className=\"friends-container\">\n          {friends.map(friend => {\n            return <Friend friend={friend}/>\n          })}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = friends => {\n  return {\n    friends\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchFriends: (friends) => dispatch({type: 'FETCH_FRIENDS', payload: friends})\n//   }\n// }\n\n\n\nexport default connect(mapStateToProps, {fetchFriends})(FriendsContainer);"]},"metadata":{},"sourceType":"module"}