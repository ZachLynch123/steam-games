{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zach/Desktop/projects/steam-common-games/src/components/FriendsContainer.js\";\nimport React from \"react\";\nimport FriendList from \"./FriendList\";\nimport steamApiKey from '../keys/keys';\nimport { connect } from 'react-redux';\nimport fetchFriends from '../actions/fetchFriends';\n\nclass FriendsContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    //  const friends = {friends: [{steamid: 1}, {steamid: 2}]}\n    //  this.props.fetchFriends(friends)\n    fetch(\"http://localhost:3000/friends/\", {\n      crossDomain: true,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    console.log(this.props.friends); // debugger\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friends-container\",\n      children: /*#__PURE__*/_jsxDEV(Friend, {\n        friends: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    friends: state.friends\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchFriends: (friends) => dispatch({type: 'FETCH_FRIENDS', payload: friends})\n//   }\n// }\n\n\nexport default connect(mapStateToProps, {\n  fetchFriends\n})(FriendsContainer);","map":{"version":3,"sources":["/home/zach/Desktop/projects/steam-common-games/src/components/FriendsContainer.js"],"names":["React","FriendList","steamApiKey","connect","fetchFriends","FriendsContainer","Component","constructor","state","data","componentDidMount","fetch","crossDomain","method","headers","then","res","json","setState","render","console","log","props","friends","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,MAAMC,gBAAN,SAA+BL,KAAK,CAACM,SAArC,CAA+C;AAE7CC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAGDC,EAAAA,iBAAiB,GAAG;AACpB;AACA;AACAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,MAAAA,WAAW,EAAE,IADyB;AAEtCC,MAAAA,MAAM,EAAE,KAF8B;AAGtCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAH6B,KAAnC,CAAL,CAKCC,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMMN,IAAI,IAAI;AACZ,WAAKS,QAAL,CAAc;AAACT,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACD,KARD;AASC;;AAMDU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB,EADO,CAEP;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AArC4C;;AAyC/C,MAAMe,eAAe,GAAGhB,KAAK,IAAI;AAC/B,SAAO;AACLe,IAAAA,OAAO,EAAEf,KAAK,CAACe;AADV,GAAP;AAID,CALD,C,CAOA;AACA;AACA;AACA;AACA;;;AAIA,eAAepB,OAAO,CAACqB,eAAD,EAAkB;AAACpB,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,gBAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport FriendList from \"./FriendList\";\nimport steamApiKey from '../keys/keys'\nimport { connect } from 'react-redux';\nimport fetchFriends from '../actions/fetchFriends';\n\nclass FriendsContainer extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      data: []\n    }\n  }\n\n\n  componentDidMount() {\n  //  const friends = {friends: [{steamid: 1}, {steamid: 2}]}\n  //  this.props.fetchFriends(friends)\n  fetch(\"http://localhost:3000/friends/\", {\n    crossDomain: true, \n    method: 'GET',\n    headers: {'Content-Type': 'application/json'},\n  })\n  .then(res => res.json())\n  .then(data => {\n    this.setState({data: data})\n  })\n  }\n\n\n \n\n\n  render() {\n    console.log(this.props.friends);\n    // debugger\n    return (\n      <div className=\"friends-container\">\n        <Friend friends={this.state.data}/>\n        \n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    friends: state.friends\n    \n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchFriends: (friends) => dispatch({type: 'FETCH_FRIENDS', payload: friends})\n//   }\n// }\n\n\n\nexport default connect(mapStateToProps, {fetchFriends})(FriendsContainer);"]},"metadata":{},"sourceType":"module"}